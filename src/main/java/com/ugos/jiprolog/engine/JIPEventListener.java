/*
 * 23/04/2014
 *
 * Copyright (C) 1999-2014 Ugo Chirico
 *
 * This is free software; you can redistribute it and/or
 * modify it under the terms of the Affero GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 *
 * You should have received a copy of the Affero GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package com.ugos.jiprolog.engine;

/**
 * JIPEventListeners are notified when an interpreter event has occured during execution.<br>
 * Interpreter events are OPEN, CLOSE, SOLUTION, MORE, END, TERM, ERROR
 * They are notified in the related methods.
 *
 * @author Ugo Chirico<br>
 * Home Page: http://www.ugochirico.com
 * @version 2.0
 * @see com.ugos.jiprolog.engine.JIPEvent
 */
public interface JIPEventListener {
    /**
     * Notifies a Solution event
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void solutionNotified(JIPEvent e);

    /**
     * Notifies a Term event. <br>
     * This event can be generated by notify/2
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void termNotified(JIPEvent e);

    /**
     * Notifies an Open event
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void openNotified(JIPEvent e);

    /**
     * Notifies a More event
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void moreNotified(JIPEvent e);

    /**
     * Notifies an End event
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void endNotified(JIPEvent e);

    /**
     * Notifies a Close event
     *
     * @param e JIPEvent occurred
     * @see com.ugos.jiprolog.engine.JIPEvent
     */
    public void closeNotified(JIPEvent e);

    /**
     * Receives an error event
     *
     * @param e JIPErrorEvent object representing the error occurred
     * @see com.ugos.jiprolog.engine.JIPErrorEvent
     */
    public void errorNotified(JIPErrorEvent e);
}
